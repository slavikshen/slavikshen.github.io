<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[为Hexo项目配置VSCode]]></title>
      <url>/2017/05/28/Set-up-VSCode-for-Hexo-Project/</url>
      <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>方便在VSCode环境下更新Hexo内容，减少终端窗口。</p>
<h2 id="NPM-Package设置"><a href="#NPM-Package设置" class="headerlink" title="NPM Package设置"></a>NPM Package设置</h2><p>增加简化脚本命令</p>
<pre class=" language-json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"deploy"</span><span class="token operator">:</span> <span class="token string">"hexo clean &amp;&amp; hexo deploy;"</span><span class="token punctuation">,</span>
    <span class="token property">"hot-server"</span><span class="token operator">:</span> <span class="token string">"hexo server &amp; hexo generate --watch"</span>
<span class="token punctuation">}</span>
</code></pre>
<p>deploy方便提交内容。</p>
<pre class=" language-sh"><code class="language-sh">$ npm run deploy
</code></pre>
<p>hot-server简化启动内容变化监视和本地测试服务器。</p>
<pre class=" language-sh"><code class="language-sh">$ npm run hot-server
</code></pre>
<h2 id="配置VSCode-Task"><a href="#配置VSCode-Task" class="headerlink" title="配置VSCode Task"></a>配置VSCode Task</h2><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>
    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.1.0"</span><span class="token punctuation">,</span>
    <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"npm"</span><span class="token punctuation">,</span>
    <span class="token property">"isShellCommand"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"showOutput"</span><span class="token operator">:</span> <span class="token string">"always"</span><span class="token punctuation">,</span>
    <span class="token property">"suppressTaskName"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"tasks"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            // 部署
            <span class="token property">"taskName"</span><span class="token operator">:</span> <span class="token string">"deploy"</span><span class="token punctuation">,</span>
            <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"run"</span><span class="token punctuation">,</span> <span class="token string">"deploy"</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            // 测试
            <span class="token property">"taskName"</span><span class="token operator">:</span> <span class="token string">"test"</span><span class="token punctuation">,</span>
            <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"run"</span><span class="token punctuation">,</span> <span class="token string">"hot-server"</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>调出VSCode命令窗口 <kbd>CMD/CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd></kbd>，输入test。</p>
<p>在Output会出现测试服务器和内容变化监控的启动信息</p>
<pre class=" language-sh"><code class="language-sh">> hexo-site@0.0.0 hot-server /Users/slavik/Documents/myblog
> hexo server & hexo generate --watch

INFO    Start processing
</code></pre>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 主题设置]]></title>
      <url>/2017/05/28/Hexo-Theme/</url>
      <content type="html"><![CDATA[<h2 id="找资源"><a href="#找资源" class="headerlink" title="找资源"></a>找资源</h2><p><a href="https://hexo.io/themes/" target="_blank" rel="external">官方网站</a><br><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">Github</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>复制或者git clone内容到themes下。<br>每个主题可能会有特殊的模块依赖关系。</p>
<p>我选了<a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="external">Apollo主题</a></p>
<p>因为会需要修改内容，所以先Folk，然后同步了自己分支下的内容安装。</p>
<h2 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h2><p>需求，替换导航条，替换Favicon，去掉Logo</p>
<p>因为懒的逐行看代码，用全局搜索，寻找关键字。</p>
<p>导航条的超链接内容在themes/apollo/_config.yml里，布局在themes/apollo/layout/partial/layout.jade。</p>
<p>Favicon.png可以直接替换。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建Hexo]]></title>
      <url>/2017/05/28/Hexo-Setup/</url>
      <content type="html"><![CDATA[<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>因为Mac已经有XCode自带的Git和Node.js开发环境，所以直接安装。</p>
<p>中间遇到了恶心的Log环境问题（DTraceProviderBindings）。不明白为啥这么多人喜欢用bunyan。参考<a href="https://kikoroc.com/2016/05/04/resolve-hexo-DTraceProviderBindings-MODULE-NOT-FOUND.html" target="_blank" rel="external">kikiroc</a>上的方法解决。</p>
<pre class=" language-sh"><code class="language-sh">$ npm install -g -hexo-cli --op-optional
</code></pre>
<p>如果之后还是出现DTraceProviderBindings的错误，可以在项目删除这个模块。因为没有必要调试Hexo</p>
<pre class=" language-sh"><code class="language-sh">$ npm uninstall dtrace-provider
</code></pre>
<h2 id="配置项目"><a href="#配置项目" class="headerlink" title="配置项目"></a>配置项目</h2><p>和<a href="https://hexo.io/docs/setup.html" target="_blank" rel="external">Hexo手册</a>上说的完全一样。十分顺利。</p>
<pre class=" language-sh"><code class="language-sh">$ hexo init myblog
$ cd myblog
$ npm install
</code></pre>
<p>编辑_config.yml的时候遇到一个问题，时区设置不支持UTC+的表示方法。必须填写名称。还好有wiki上的<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="external">时区名称列表</a>。</p>
<p>如果时区设置错误，所有hexo命令都不会有正确结果。因为他们都是按照时间戳判断文章是不是应该加入内容更新。</p>
<h2 id="启动本地测试环境"><a href="#启动本地测试环境" class="headerlink" title="启动本地测试环境"></a>启动本地测试环境</h2><pre class=" language-sh"><code class="language-sh">$ hexo generate
$ hexo server
</code></pre>
<p>打开<a href="http://localhost:4000/" target="_blank" rel="external">Hexo本地测试服务器</a>，一切顺利</p>
<h2 id="发布到GitHub"><a href="#发布到GitHub" class="headerlink" title="发布到GitHub"></a>发布到GitHub</h2><p>需要插件hexo-deployer-git</p>
<p>参考<a href="https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39" target="_blank" rel="external">安装方法</a></p>
<pre class=" language-sh"><code class="language-sh">$ npm install hexo-deployer-git --save
</code></pre>
<p>向_config.yml增加git设置</p>
<pre class=" language-yml"><code class="language-yml"># Deployment
## Docs: http://hexo.io/docs/deployment.html
deploy:
    type: git
    repo: git@github.com:slavikshen/slavikshen.github.io.git
    branch: master
</code></pre>
<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><pre class=" language-sh"><code class="language-sh">hexo deploy
</code></pre>
]]></content>
      
        
    </entry>
    
  
  
</search>
